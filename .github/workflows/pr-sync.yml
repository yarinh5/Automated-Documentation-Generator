name: PR Sync

on:
  pull_request:
    types: [synchronize]

jobs:
  pr-sync:
    runs-on: ubuntu-latest
    steps:
    - name: Handle synchronized PR
      uses: actions/github-script@v8
      with:
        script: |
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });

          const status = pr.state;
          const draft = pr.draft;

          if (status !== 'open') {
            console.log('PR is not open');
            return;
          }

          // Check if PR has new commits
          const { data: commits } = await github.rest.pulls.listCommits({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });

          const latestCommit = commits[commits.length - 1];
          const commitMessage = latestCommit.commit.message;

          // Check if commit message follows conventional commit format
          const conventionalCommitRegex = /^(\w+)(\(([^)]+)\))?: (.+)$/;
          const isConventional = conventionalCommitRegex.test(commitMessage);

          if (!isConventional) {
            console.log('Latest commit does not follow conventional commit format');
            return;
          }

          // Update status label based on draft status
          const statusLabel = draft ? 'status: draft' : 'status: ready-for-review';

          // Remove old status labels
          await github.rest.issues.removeLabel({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            name: 'status: draft'
          });

          await github.rest.issues.removeLabel({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            name: 'status: ready-for-review'
          });

          // Add new status label
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            labels: [statusLabel]
          });

          console.log(`PR synchronized, status updated to: ${statusLabel}`);
